{
  "openapi" : "3.0.1",
  "paths" : {
    "/artifacts/{id}" : {
      "get" : {
        "tags" : [ "Artifacts" ],
        "summary" : "Gets a specific build config.",
        "operationId" : "getSpecific",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the Artifact",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artifact"
                }
              }
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal", "Artifacts" ],
        "summary" : "[role:admin] Updates an existing Artifact",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Artifact"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Entity successfully updated"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/artifacts" : {
      "get" : {
        "tags" : [ "Artifacts" ],
        "summary" : "Gets all artifacts.",
        "operationId" : "getAll",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sha256",
          "in" : "query",
          "description" : "Filter by sha256 of the artifact",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "md5",
          "in" : "query",
          "description" : "Filter by md5 of the artifact",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sha1",
          "in" : "query",
          "description" : "Filter by sha1 of the artifact",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArtifactPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "internal", "Artifacts" ],
        "summary" : "[role:admin] Creates a new Artifact",
        "operationId" : "create",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Artifact"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Entity successfully created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artifact"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/artifacts/{id}/dependant-builds" : {
      "get" : {
        "tags" : [ "Artifacts" ],
        "summary" : "Gets the build(s) that depends on this artifact.",
        "operationId" : "getDependantBuilds",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the artifact",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/artifacts/{id}/builds" : {
      "get" : {
        "tags" : [ "Artifacts" ],
        "summary" : "Gets the build(s) that produced this artifact.",
        "operationId" : "getBuilds",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the artifact",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/build-configs/{id}/clone" : {
      "post" : {
        "tags" : [ "Build Configs" ],
        "summary" : "Clones an existing build config.",
        "operationId" : "clone",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build config",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Entity successfully created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildConfiguration"
                }
              }
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/build-configs/{id}" : {
      "get" : {
        "tags" : [ "Build Configs" ],
        "summary" : "Gets a specific build config.",
        "operationId" : "getSpecific_1",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build config",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildConfiguration"
                }
              }
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Build Configs" ],
        "summary" : "Updates an existing build config.",
        "operationId" : "update_1",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build config",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildConfiguration"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Entity successfully updated"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Build Configs" ],
        "summary" : "Patch a specific build config.",
        "operationId" : "patchSpecific",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build config",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildConfiguration"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildConfiguration"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/build-configs/{id}/build" : {
      "post" : {
        "tags" : [ "Build Configs" ],
        "summary" : "Triggers a build of a specific build config.",
        "operationId" : "trigger",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build config",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "temporaryBuild",
          "in" : "query",
          "description" : "Is it a temporary build or a standard build?",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "rebuildMode",
          "in" : "query",
          "description" : "What should varant rebuild?",
          "schema" : {
            "type" : "string",
            "default" : "IMPLICIT_DEPENDENCY_CHECK",
            "enum" : [ "IMPLICIT_DEPENDENCY_CHECK", "EXPLICIT_DEPENDENCY_CHECK", "FORCE" ]
          }
        }, {
          "name" : "buildDependencies",
          "in" : "query",
          "description" : "Should we build also dependencies of this BuildConfiguration?",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "keepPodOnFailure",
          "in" : "query",
          "description" : "Should we keep the build container running, if the build fails?",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "timestampAlignment",
          "in" : "query",
          "description" : "Should we add a timestamp during the alignment? Valid only for temporary builds.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Request was accepted for processing",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Build"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/build-configs/{id}/dependencies" : {
      "get" : {
        "tags" : [ "Build Configs" ],
        "summary" : "Get the direct dependencies of the specified build config.",
        "operationId" : "getDependencies",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build config",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildConfigPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Build Configs" ],
        "summary" : "Adds a dependency to the specified build config.",
        "operationId" : "addDependency",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build config",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildConfigurationRef"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success but no content provided"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/build-configs" : {
      "get" : {
        "tags" : [ "Build Configs" ],
        "summary" : "Gets all build configs.",
        "operationId" : "getAll_1",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildConfigPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Build Configs" ],
        "summary" : "Creates a new build config.",
        "operationId" : "createNew",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildConfiguration"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Entity successfully created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildConfiguration"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/build-configs/{id}/revisions/{rev}" : {
      "get" : {
        "tags" : [ "Build Configs" ],
        "summary" : "Get specific audited revision of this build config.",
        "operationId" : "getRevision",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build config",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "rev",
          "in" : "path",
          "description" : "Revision number of the build config",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildConfigurationRevision"
                }
              }
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/build-configs/{id}/group-configs" : {
      "get" : {
        "tags" : [ "Build Configs" ],
        "summary" : "Gets group configs associated with the specified build config.",
        "operationId" : "getGroupConfigs",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build config",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupConfigPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/build-configs/{id}/revisions" : {
      "get" : {
        "tags" : [ "Build Configs" ],
        "summary" : "Gets audited revisions of this build config.",
        "operationId" : "getRevisions",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build config",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildConfigRevisionPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Build Configs" ],
        "summary" : "Creates new build config revision.",
        "description" : "This endpoint can be used for updating build config while returning the new revision.",
        "operationId" : "createRevision",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build config",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildConfiguration"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Entity successfully created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildConfigurationRevision"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/build-configs/{id}/revisions/{rev}/build" : {
      "post" : {
        "tags" : [ "Build Configs" ],
        "summary" : "Triggers a build of a build config in a specific revision.",
        "operationId" : "triggerRevision",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build config",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "rev",
          "in" : "path",
          "description" : "Revision number of the build config",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "temporaryBuild",
          "in" : "query",
          "description" : "Is it a temporary build or a standard build?",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "rebuildMode",
          "in" : "query",
          "description" : "What should varant rebuild?",
          "schema" : {
            "type" : "string",
            "default" : "IMPLICIT_DEPENDENCY_CHECK",
            "enum" : [ "IMPLICIT_DEPENDENCY_CHECK", "EXPLICIT_DEPENDENCY_CHECK", "FORCE" ]
          }
        }, {
          "name" : "buildDependencies",
          "in" : "query",
          "description" : "Should we build also dependencies of this BuildConfiguration?",
          "schema" : {
            "type" : "boolean",
            "default" : true
          }
        }, {
          "name" : "keepPodOnFailure",
          "in" : "query",
          "description" : "Should we keep the build container running, if the build fails?",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "timestampAlignment",
          "in" : "query",
          "description" : "Should we add a timestamp during the alignment? Valid only for temporary builds.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Request was accepted for processing",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Build"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/build-configs/{id}/revisions/{rev}/restore" : {
      "post" : {
        "tags" : [ "Build Configs" ],
        "summary" : "Restores a build config to a specific audited revision",
        "operationId" : "restoreRevision",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build config",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "rev",
          "in" : "path",
          "description" : "Revision number of the build config",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildConfiguration"
                }
              }
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/build-configs/create-with-scm" : {
      "post" : {
        "tags" : [ "Build Configs" ],
        "summary" : "Starts a task of creating a new build config with a given SCM URL.",
        "description" : "The given SCM URL is automatically analyzed and if it's an external URLthe content of the SCM repository is cloned into an internal repository.",
        "operationId" : "createWithSCM",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildConfigWithSCMRequest"
              }
            }
          }
        },
        "responses" : {
          "202" : {
            "description" : "Request was accepted for processing",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildConfigCreationResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/build-configs/supported-parameters" : {
      "get" : {
        "tags" : [ "Build Configs" ],
        "summary" : "Provides list of supported parameters.",
        "description" : "Provides list of parameters supported by core, there can be also other parameters not known by core.",
        "operationId" : "getSupportedParameters",
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Parameter"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/build-configs/{id}/dependencies/{depId}" : {
      "delete" : {
        "tags" : [ "Build Configs" ],
        "summary" : "Removes a dependency from the specified build config.",
        "operationId" : "removeDependency",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build config",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "depId",
          "in" : "path",
          "description" : "ID of the dependency",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success but no content provided"
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/build-configs/{id}/builds" : {
      "get" : {
        "tags" : [ "Build Configs" ],
        "summary" : "Get all builds associated with this build config.",
        "operationId" : "getBuilds_1",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build config",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "latest",
          "in" : "query",
          "description" : "Should return only latest build?",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "running",
          "in" : "query",
          "description" : "Should return only running builds?",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/builds/{id}" : {
      "get" : {
        "tags" : [ "Builds" ],
        "summary" : "Gets specific build.",
        "operationId" : "getSpecific_2",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Build"
                }
              }
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Builds" ],
        "summary" : "Updates an existing build.",
        "operationId" : "update_2",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Build"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Entity successfully updated"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Builds" ],
        "summary" : "Delete specific temporary build.",
        "description" : "The operation is async, for the result subscribe to 'build-records#delete' events with optional qualifier buildRecord.id.",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Request was accepted for processing"
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/builds/{id}/brew-push" : {
      "get" : {
        "tags" : [ "Builds" ],
        "summary" : "Get Brew push result for specific build.",
        "operationId" : "getPushResult",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildPushResult"
                }
              }
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Builds" ],
        "summary" : "Push build to Brew.",
        "operationId" : "push",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildPushRequest"
              }
            }
          }
        },
        "responses" : {
          "202" : {
            "description" : "Request was accepted for processing",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildPushResultPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Builds" ],
        "summary" : "Cancels push of build to Brew.",
        "operationId" : "cancelPush",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Request was accepted for processing"
          },
          "404" : {
            "description" : "Can not find any Brew push in progress."
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/builds/{id}/artifacts/dependencies" : {
      "get" : {
        "tags" : [ "Builds" ],
        "summary" : "Gets dependency artifacts for specific build.",
        "operationId" : "getDependencyArtifacts",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArtifactPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal", "Builds" ],
        "summary" : "[role:admin] Set dependent artifacts on the BuildRecord. Note that operation replaces existing collection!",
        "operationId" : "setDependentArtifacts",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "List of artifact ids",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArtifactPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/builds/{id}/attributes" : {
      "post" : {
        "tags" : [ "Builds" ],
        "summary" : "Add attribute to a specific build.",
        "operationId" : "addAttribute",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "Attribute key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "value",
          "in" : "query",
          "description" : "Attribute value",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Entity successfully created"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Builds" ],
        "summary" : "Remove attribute from a specific build.",
        "operationId" : "removeAttribute",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "Attribute key",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Entity deleted"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/builds" : {
      "get" : {
        "tags" : [ "Builds" ],
        "summary" : "Gets all builds.",
        "operationId" : "getAll_2",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "latest",
          "in" : "query",
          "description" : "Should return only latest build?",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "running",
          "in" : "query",
          "description" : "Should return only running builds?",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "attribute-key",
          "in" : "query",
          "description" : "Find builds only with given attribute key (and value).",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attribute-value",
          "in" : "query",
          "description" : "Find build only with given attribute value (and key).",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/builds/{id}/artifacts/built" : {
      "get" : {
        "tags" : [ "Builds" ],
        "summary" : "Gets artifacts built in a specific build.",
        "operationId" : "getBuiltArtifacts",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArtifactPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "internal", "Builds" ],
        "summary" : "[role:admin] Set built artifacts on the BuildRecord. Note that operation replaces existing collection!",
        "operationId" : "setBuiltArtifacts",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "List of artifact ids",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ArtifactPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/builds/{id}/scm-archive" : {
      "get" : {
        "tags" : [ "Builds" ],
        "summary" : "Redirects to the SCM archive link",
        "operationId" : "getInternalScmArchiveLink",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirected to resource"
          },
          "404" : {
            "description" : "Can not find specified result"
          }
        }
      }
    },
    "/builds/{id}/brew-push/complete" : {
      "post" : {
        "tags" : [ "Internal", "Builds" ],
        "summary" : "Notifies that the Brew push finished.",
        "operationId" : "completePush",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildPushResult"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Entity successfully created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildPushResult"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/builds/{id}/build-config-revision" : {
      "get" : {
        "tags" : [ "Builds" ],
        "summary" : "Gets the build config revision for specific build.",
        "operationId" : "getBuildConfigurationRevision",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildConfigurationRevision"
                }
              }
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/builds/{id}/logs/align" : {
      "get" : {
        "tags" : [ "Builds" ],
        "summary" : "Gets alignment logs for specific build.",
        "operationId" : "getAlignLogs",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/builds/{id}/logs/build" : {
      "get" : {
        "tags" : [ "Builds" ],
        "summary" : "Gets build logs for specific build.",
        "operationId" : "getBuildLogs",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/builds/ssh-credentials/{id}" : {
      "get" : {
        "tags" : [ "Builds" ],
        "summary" : "Gets ssh credentials to log into the build pod.",
        "description" : "This GET requests require authentication",
        "operationId" : "getSshCredentials",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SSHCredentials"
                }
              }
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/builds/with-status-and-log" : {
      "get" : {
        "tags" : [ "Builds" ],
        "summary" : "Gets the Build Records produced from the BuildConfiguration by name.",
        "operationId" : "getAllByStatusAndLogContaining",
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "description" : "Status of the build",
          "schema" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILED", "NO_REBUILD_REQUIRED", "WAITING_FOR_DEPENDENCIES", "BUILDING", "REJECTED", "REJECTED_FAILED_DEPENDENCIES", "CANCELLED", "SYSTEM_ERROR", "NEW" ]
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "Log search string",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/builds/{id}/dependency-graph" : {
      "get" : {
        "tags" : [ "Builds" ],
        "summary" : "Gets dependency graph for a build.",
        "operationId" : "getDependencyGraph",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildsGraph"
                }
              }
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/builds/{id}/cancel" : {
      "post" : {
        "tags" : [ "Builds" ],
        "summary" : "Cancel running build.",
        "operationId" : "cancel",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Request was accepted for processing"
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/environments" : {
      "get" : {
        "tags" : [ "Environments" ],
        "summary" : "Gets all environments.",
        "operationId" : "getAll_3",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildEnvironmentPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/environments/{id}" : {
      "get" : {
        "tags" : [ "Environments" ],
        "summary" : "Gets a specific environment.",
        "operationId" : "getSpecific_3",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the environment",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Environment"
                }
              }
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/group-builds/{id}" : {
      "get" : {
        "tags" : [ "Group Builds" ],
        "summary" : "Gets specific group build.",
        "operationId" : "getSpecific_4",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the group build",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupBuild"
                }
              }
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Group Builds" ],
        "summary" : "Delete specific temporary group build.",
        "description" : "The operation is async, for the result subscribe to 'build-config-set-records#delete' events with optional qualifier buildRecord.id.",
        "operationId" : "delete_1",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the group build",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Request was accepted for processing"
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/group-builds" : {
      "get" : {
        "tags" : [ "Group Builds" ],
        "summary" : "Gets all group builds.",
        "operationId" : "getAll_4",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupBuildPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/group-builds/{id}/brew-push" : {
      "post" : {
        "tags" : [ "Group Builds" ],
        "summary" : "Push all perfomred builds from this group build to Brew.",
        "operationId" : "brewPush",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the group build",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GroupBuildPushRequest"
              }
            }
          }
        },
        "responses" : {
          "202" : {
            "description" : "Request was accepted for processing"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/group-builds/{id}/dependency-graph" : {
      "get" : {
        "tags" : [ "Group Builds" ],
        "summary" : "Gets builds dependency graph for a build group.",
        "operationId" : "getDependencyGraph_1",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the group build",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildsGraph"
                }
              }
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/group-builds/{id}/cancel" : {
      "post" : {
        "tags" : [ "Group Builds" ],
        "summary" : "Cancel all builds running in the build group.",
        "operationId" : "cancel_1",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the group build",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Request was accepted for processing"
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/group-builds/{id}/builds" : {
      "get" : {
        "tags" : [ "Group Builds" ],
        "summary" : "Gets the builds associated with this group build.",
        "operationId" : "getBuilds_2",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the group build",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "latest",
          "in" : "query",
          "description" : "Should return only latest build?",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "running",
          "in" : "query",
          "description" : "Should return only running builds?",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/group-configs/{id}" : {
      "get" : {
        "tags" : [ "Group Configs" ],
        "summary" : "Gets a specific group config.",
        "operationId" : "getSpecific_5",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the group config",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupConfiguration"
                }
              }
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Group Configs" ],
        "summary" : "Updates an existing group config.",
        "operationId" : "update_3",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the group config",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GroupConfiguration"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Entity successfully updated"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Group Configs" ],
        "summary" : "Patch a specific group config.",
        "operationId" : "patchSpecific_1",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the group config",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GroupConfiguration"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupConfiguration"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/group-configs/{id}/build" : {
      "post" : {
        "tags" : [ "Group Configs" ],
        "summary" : "Builds the build configs in the group config.",
        "operationId" : "trigger_1",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the group config",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "temporaryBuild",
          "in" : "query",
          "description" : "Is it a temporary build or a standard build?",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "rebuildMode",
          "in" : "query",
          "description" : "What should varant rebuild?",
          "schema" : {
            "type" : "string",
            "default" : "IMPLICIT_DEPENDENCY_CHECK",
            "enum" : [ "IMPLICIT_DEPENDENCY_CHECK", "EXPLICIT_DEPENDENCY_CHECK", "FORCE" ]
          }
        }, {
          "name" : "timestampAlignment",
          "in" : "query",
          "description" : "Should we add a timestamp during the alignment? Valid only for temporary builds.",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GroupBuildRequest"
              }
            }
          }
        },
        "responses" : {
          "202" : {
            "description" : "Request was accepted for processing",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupBuild"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/group-configs/{id}/build-configs" : {
      "get" : {
        "tags" : [ "Group Configs" ],
        "summary" : "Gets the build configs for the group config.",
        "operationId" : "getConfigurations",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the group config",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildConfigPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Group Configs" ],
        "summary" : "Adds a build config to the group config.",
        "operationId" : "addConfiguration",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the group config",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildConfigurationRef"
              }
            }
          }
        },
        "responses" : {
          "204" : {
            "description" : "Success but no content provided"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/group-configs/{id}/build-configs/{configId}" : {
      "delete" : {
        "tags" : [ "Group Configs" ],
        "summary" : "Removes a build config from the specified group config.",
        "operationId" : "removeConfiguration",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the group config",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "configId",
          "in" : "path",
          "description" : "ID of the build config",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Success but no content provided"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/group-configs" : {
      "get" : {
        "tags" : [ "Group Configs" ],
        "summary" : "Gets all group configs.",
        "operationId" : "getAll_5",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupConfigPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Group Configs" ],
        "summary" : "Creates a new group config.",
        "operationId" : "createNew_1",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GroupConfiguration"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Entity successfully created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupConfiguration"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/group-configs/{id}/group-builds" : {
      "get" : {
        "tags" : [ "Group Configs" ],
        "summary" : "Get all group builds associated with this group config.",
        "operationId" : "getAllGroupBuilds",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the group config",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupBuildPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/group-configs/{id}/builds" : {
      "get" : {
        "tags" : [ "Group Configs" ],
        "summary" : "Gets all builds associated with the contained build configs.",
        "operationId" : "getBuilds_3",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the group config",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "latest",
          "in" : "query",
          "description" : "Should return only latest build?",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "running",
          "in" : "query",
          "description" : "Should return only running builds?",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}" : {
      "get" : {
        "tags" : [ "Products" ],
        "summary" : "Gets a specific product.",
        "operationId" : "getSpecific_6",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the product",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Product"
                }
              }
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Products" ],
        "summary" : "Updates an existing product.",
        "operationId" : "update_4",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the product",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Product"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Entity successfully updated"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Products" ],
        "summary" : "Patch an existing product.",
        "operationId" : "patchSpecific_2",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the product",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Product"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Product"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products" : {
      "get" : {
        "tags" : [ "Products" ],
        "summary" : "Gets all products.",
        "operationId" : "getAll_6",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Products" ],
        "summary" : "Creates a new product.",
        "operationId" : "createNew_2",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Product"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Entity successfully created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Product"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}/versions" : {
      "get" : {
        "tags" : [ "Products" ],
        "summary" : "Get all versions for a specific product.",
        "operationId" : "getProductVersions",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the product",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductVersionPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/product-milestones/{id}" : {
      "get" : {
        "tags" : [ "Product Milestones" ],
        "summary" : "Gets a specific product milestone.",
        "operationId" : "getSpecific_7",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the product milestone",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductMilestone"
                }
              }
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Product Milestones" ],
        "summary" : "Updates an existing product milestone.",
        "operationId" : "update_5",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the product milestone",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductMilestone"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Entity successfully updated"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Product Milestones" ],
        "summary" : "Patch an existing product milestone.",
        "operationId" : "patchSpecific_3",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the product milestone",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductMilestone"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductMilestone"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/product-milestones" : {
      "post" : {
        "tags" : [ "Product Milestones" ],
        "summary" : "Creates a new product milestone.",
        "operationId" : "createNew_3",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductMilestone"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Entity successfully created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductMilestone"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/product-milestones/{id}/builds" : {
      "get" : {
        "tags" : [ "Product Milestones" ],
        "summary" : "Gets builds performed during a product milestone cycle.",
        "operationId" : "getBuilds_4",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the product milestone",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "latest",
          "in" : "query",
          "description" : "Should return only latest build?",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "running",
          "in" : "query",
          "description" : "Should return only running builds?",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/product-milestones/{id}/close" : {
      "post" : {
        "tags" : [ "Product Milestones" ],
        "summary" : "Close a product milestone.",
        "operationId" : "closeMilestone",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the product milestone",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductMilestone"
              }
            }
          }
        },
        "responses" : {
          "202" : {
            "description" : "Request was accepted for processing"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Product Milestones" ],
        "summary" : "Cancel product milestone close process.",
        "operationId" : "cancelMilestoneClose",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the product milestone",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "202" : {
            "description" : "Request was accepted for processing"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/product-releases/{id}" : {
      "get" : {
        "tags" : [ "Product Releases" ],
        "summary" : "Gets a specific product release.",
        "operationId" : "getSpecific_8",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the product release",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductRelease"
                }
              }
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Product Releases" ],
        "summary" : "Updates an existing product release.",
        "operationId" : "update_6",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the product release",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductRelease"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Entity successfully updated"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Product Releases" ],
        "summary" : "Patch an existing product release.",
        "operationId" : "patchSpecific_4",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the product release",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductRelease"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductRelease"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/product-releases/support-levels" : {
      "get" : {
        "tags" : [ "Product Releases" ],
        "summary" : "Gets all product releases support levels.",
        "operationId" : "getAllSupportLevel",
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string",
                    "enum" : [ "UNRELEASED", "EARLYACCESS", "SUPPORTED", "EXTENDED_SUPPORT", "EOL" ]
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/product-releases" : {
      "post" : {
        "tags" : [ "Product Releases" ],
        "summary" : "Creates a new product release.",
        "operationId" : "createNew_4",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductRelease"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Entity successfully created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductRelease"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/product-versions/{id}" : {
      "get" : {
        "tags" : [ "Product Versions" ],
        "summary" : "Gets a specific product version.",
        "operationId" : "getSpecific_9",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the product version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductVersion"
                }
              }
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Product Versions" ],
        "summary" : "Updates an existing product version.",
        "operationId" : "update_7",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the product version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductVersion"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Entity successfully updated"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Product Versions" ],
        "summary" : "Patch an existing product version.",
        "operationId" : "patchSpecific_5",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the product version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductVersion"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductVersion"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/product-versions/{id}/releases" : {
      "get" : {
        "tags" : [ "Product Versions" ],
        "summary" : "Gets all product releases of a specific product version.",
        "operationId" : "getReleases",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the product version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductReleasePage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/product-versions/{id}/build-configs" : {
      "get" : {
        "tags" : [ "Product Versions" ],
        "summary" : "Gets all build configs in a specific product version.",
        "operationId" : "getBuildConfigurations",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the product version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildConfigPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/product-versions/{id}/group-configs" : {
      "get" : {
        "tags" : [ "Product Versions" ],
        "summary" : "Gets group configs associated with a specific product version.",
        "operationId" : "getGroupConfigurations",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the product version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GroupConfigPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/product-versions/{id}/milestones" : {
      "get" : {
        "tags" : [ "Product Versions" ],
        "summary" : "Gets all product milestones of a specific product version.",
        "operationId" : "getMilestones",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the product version",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductMilestonePage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/product-versions" : {
      "post" : {
        "tags" : [ "Product Versions" ],
        "summary" : "Creates a new product version.",
        "operationId" : "createNew_5",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductVersion"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Entity successfully created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductVersion"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{id}" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "Gets a specific project.",
        "operationId" : "getSpecific_10",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the project",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Project"
                }
              }
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Projects" ],
        "summary" : "Updates an existing project.",
        "operationId" : "update_8",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the project",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Project"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Entity successfully updated"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Projects" ],
        "summary" : "Patch an existing project.",
        "operationId" : "patchSpecific_6",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the project",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Project"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Project"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/projects" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "Gets all projects.",
        "operationId" : "getAll_7",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Projects" ],
        "summary" : "Creates a new project.",
        "operationId" : "createNew_6",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Project"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Entity successfully created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Project"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{id}/build-configs" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "Gets all build configs associated with the specified project.",
        "operationId" : "getBuildConfigurations_1",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Project Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildConfigPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/projects/{id}/builds" : {
      "get" : {
        "tags" : [ "Projects" ],
        "summary" : "Get all builds associated with a specific project.",
        "operationId" : "getBuilds_5",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the build config",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "latest",
          "in" : "query",
          "description" : "Should return only latest build?",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "running",
          "in" : "query",
          "description" : "Should return only running builds?",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/scm-repositories/{id}" : {
      "get" : {
        "tags" : [ "SCM Repositories" ],
        "summary" : "Gets a specific SCM repository.",
        "operationId" : "getSpecific_11",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the SCM repository",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SCMRepository"
                }
              }
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "SCM Repositories" ],
        "summary" : "Updates an existing SCM repository.",
        "operationId" : "update_9",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the SCM repository",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SCMRepository"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Entity successfully updated"
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "SCM Repositories" ],
        "summary" : "Patch an existing SCM repository.",
        "operationId" : "patchSpecific_7",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the SCM repository",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json-patch+json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SCMRepository"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SCMRepository"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Can not find specified result"
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/scm-repositories" : {
      "get" : {
        "tags" : [ "SCM Repositories" ],
        "summary" : "Gets all SCM repositories.",
        "operationId" : "getAll_8",
        "parameters" : [ {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "url",
          "in" : "query",
          "description" : "Url to search for",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "search-url",
          "in" : "query",
          "description" : "Url part to search for",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SCMRepositoryPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/scm-repositories/{id}/build-configs" : {
      "get" : {
        "tags" : [ "SCM Repositories" ],
        "summary" : "Gets all build configs associated with a specific SCM repository.",
        "operationId" : "getBuildsConfigs",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the SCM repository",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildConfigPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/scm-repositories/create-and-sync" : {
      "post" : {
        "tags" : [ "SCM Repositories" ],
        "summary" : "Creates a new SCM repository.",
        "description" : "If the given URL is external, it does create the repository in the scm server.",
        "operationId" : "createNew_7",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateAndSyncSCMRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "202" : {
            "description" : "SCM repository is being created. The 'taskId' key has the id of the Maitai process instance creating the repository ('repository' key is null)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RepositoryCreationResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "SCM repository is already present in PNC. The 'repository' key is populated with the details of the SCM repository ('taskId' key is null)",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RepositoryCreationResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "409" : {
            "description" : "Conflict while saving an entity",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/current" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Gets logged user.",
        "operationId" : "getCurrentUser",
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/builds" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Gets all builds triggered by specific user.",
        "operationId" : "getBuilds_6",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of the user",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "pageIndex",
          "in" : "query",
          "description" : "Page Index",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "Pagination size (maximum is 200)",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 50
          }
        }, {
          "name" : "sort",
          "in" : "query",
          "description" : "Sorting RSQL",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "q",
          "in" : "query",
          "description" : "RSQL Query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "latest",
          "in" : "query",
          "description" : "Should return only latest build?",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "running",
          "in" : "query",
          "description" : "Should return only running builds?",
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success with results",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildPage"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input parameters or validation error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ErrorResponse" : {
        "type" : "object",
        "properties" : {
          "errorType" : {
            "type" : "string"
          },
          "errorMessage" : {
            "type" : "string"
          },
          "details" : {
            "type" : "object"
          }
        }
      },
      "Artifact" : {
        "required" : [ "id", "identifier" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "identifier" : {
            "type" : "string"
          },
          "artifactQuality" : {
            "type" : "string",
            "enum" : [ "NEW", "VERIFIED", "TESTED", "DEPRECATED", "BLACKLISTED", "DELETED", "TEMPORARY" ]
          },
          "md5" : {
            "type" : "string"
          },
          "sha1" : {
            "type" : "string"
          },
          "sha256" : {
            "type" : "string"
          },
          "filename" : {
            "type" : "string"
          },
          "deployPath" : {
            "type" : "string"
          },
          "importDate" : {
            "type" : "integer",
            "format" : "int64"
          },
          "originUrl" : {
            "type" : "string"
          },
          "size" : {
            "type" : "integer",
            "format" : "int64"
          },
          "deployUrl" : {
            "type" : "string"
          },
          "publicUrl" : {
            "type" : "string"
          },
          "targetRepository" : {
            "$ref" : "#/components/schemas/TargetRepository"
          }
        }
      },
      "TargetRepository" : {
        "required" : [ "id", "identifier", "repositoryPath", "repositoryType", "temporaryRepo" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "temporaryRepo" : {
            "type" : "boolean"
          },
          "identifier" : {
            "type" : "string"
          },
          "repositoryType" : {
            "type" : "string",
            "enum" : [ "MAVEN", "NPM", "COCOA_POD", "GENERIC_PROXY" ]
          },
          "repositoryPath" : {
            "type" : "string"
          }
        }
      },
      "ArtifactPage" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalHits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Artifact"
            }
          }
        }
      },
      "PageArtifact" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalHits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Artifact"
            }
          }
        }
      },
      "Build" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "submitTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "endTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILED", "NO_REBUILD_REQUIRED", "WAITING_FOR_DEPENDENCIES", "BUILDING", "REJECTED", "REJECTED_FAILED_DEPENDENCIES", "CANCELLED", "SYSTEM_ERROR", "NEW" ]
          },
          "buildContentId" : {
            "type" : "string"
          },
          "temporaryBuild" : {
            "type" : "boolean"
          },
          "scmUrl" : {
            "type" : "string"
          },
          "scmRevision" : {
            "type" : "string"
          },
          "scmTag" : {
            "type" : "string"
          },
          "project" : {
            "$ref" : "#/components/schemas/ProjectRef"
          },
          "scmRepository" : {
            "$ref" : "#/components/schemas/SCMRepository"
          },
          "environment" : {
            "$ref" : "#/components/schemas/Environment"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "buildConfigRevision" : {
            "$ref" : "#/components/schemas/BuildConfigurationRevisionRef"
          },
          "productMilestone" : {
            "$ref" : "#/components/schemas/ProductMilestoneRef"
          },
          "groupBuild" : {
            "$ref" : "#/components/schemas/GroupBuildRef"
          }
        }
      },
      "BuildConfigurationRevisionRef" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "rev" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "buildScript" : {
            "type" : "string"
          },
          "scmRevision" : {
            "type" : "string"
          },
          "creationTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "modificationTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "buildType" : {
            "type" : "string",
            "enum" : [ "MVN", "NPM", "GRADLE" ]
          }
        }
      },
      "BuildPage" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalHits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Build"
            }
          }
        }
      },
      "Environment" : {
        "required" : [ "id", "systemImageId", "systemImageType" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "systemImageRepositoryUrl" : {
            "type" : "string"
          },
          "systemImageId" : {
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "systemImageType" : {
            "type" : "string",
            "enum" : [ "DOCKER_IMAGE", "VIRTUAL_MACHINE_RAW", "VIRTUAL_MACHINE_QCOW2", "LOCAL_WORKSPACE" ]
          },
          "deprecated" : {
            "type" : "boolean"
          }
        }
      },
      "GroupBuildRef" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "endTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILED", "NO_REBUILD_REQUIRED", "WAITING_FOR_DEPENDENCIES", "BUILDING", "REJECTED", "REJECTED_FAILED_DEPENDENCIES", "CANCELLED", "SYSTEM_ERROR", "NEW" ]
          },
          "temporaryBuild" : {
            "type" : "boolean"
          }
        }
      },
      "ProductMilestoneRef" : {
        "required" : [ "id", "version" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "pattern" : "^[0-9]+\\.[0-9]+\\.[0-9]+\\.[\\w\\.-]+$",
            "type" : "string"
          },
          "endDate" : {
            "type" : "integer",
            "format" : "int64"
          },
          "startingDate" : {
            "type" : "integer",
            "format" : "int64"
          },
          "plannedEndDate" : {
            "type" : "integer",
            "format" : "int64"
          },
          "downloadUrl" : {
            "type" : "string"
          },
          "issueTrackerUrl" : {
            "type" : "string"
          }
        }
      },
      "ProjectRef" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "issueTrackerUrl" : {
            "type" : "string"
          },
          "projectUrl" : {
            "type" : "string"
          }
        }
      },
      "SCMRepository" : {
        "required" : [ "id", "internalUrl" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "internalUrl" : {
            "type" : "string"
          },
          "externalUrl" : {
            "type" : "string"
          },
          "preBuildSyncEnabled" : {
            "type" : "boolean"
          }
        }
      },
      "User" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          }
        }
      },
      "PageBuild" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalHits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Build"
            }
          }
        }
      },
      "BuildConfiguration" : {
        "required" : [ "buildType", "id", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "pattern" : "^[a-zA-Z0-9_.][a-zA-Z0-9_.-]*(?<!\\.git)$",
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "buildScript" : {
            "type" : "string"
          },
          "scmRevision" : {
            "type" : "string"
          },
          "creationTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "modificationTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "archived" : {
            "type" : "boolean"
          },
          "buildType" : {
            "type" : "string",
            "enum" : [ "MVN", "NPM", "GRADLE" ]
          },
          "scmRepository" : {
            "$ref" : "#/components/schemas/SCMRepository"
          },
          "project" : {
            "$ref" : "#/components/schemas/ProjectRef"
          },
          "environment" : {
            "$ref" : "#/components/schemas/Environment"
          },
          "dependencies" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BuildConfigurationRef"
            }
          },
          "productVersion" : {
            "$ref" : "#/components/schemas/ProductVersionRef"
          },
          "groupConfigs" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/GroupConfigurationRef"
            }
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "BuildConfigurationRef" : {
        "required" : [ "buildType", "id", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "pattern" : "^[a-zA-Z0-9_.][a-zA-Z0-9_.-]*(?<!\\.git)$",
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "buildScript" : {
            "type" : "string"
          },
          "scmRevision" : {
            "type" : "string"
          },
          "creationTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "modificationTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "archived" : {
            "type" : "boolean"
          },
          "buildType" : {
            "type" : "string",
            "enum" : [ "MVN", "NPM", "GRADLE" ]
          }
        }
      },
      "GroupConfigurationRef" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "ProductVersionRef" : {
        "required" : [ "id", "version" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "pattern" : "^[0-9]+\\.[0-9]+$",
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "BuildConfigPage" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalHits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BuildConfiguration"
            }
          }
        }
      },
      "PageBuildConfiguration" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalHits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BuildConfiguration"
            }
          }
        }
      },
      "BuildConfigurationRevision" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "rev" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "buildScript" : {
            "type" : "string"
          },
          "scmRevision" : {
            "type" : "string"
          },
          "creationTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "modificationTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "buildType" : {
            "type" : "string",
            "enum" : [ "MVN", "NPM", "GRADLE" ]
          },
          "scmRepository" : {
            "$ref" : "#/components/schemas/SCMRepository"
          },
          "project" : {
            "$ref" : "#/components/schemas/ProjectRef"
          },
          "environment" : {
            "$ref" : "#/components/schemas/Environment"
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "GroupConfigPage" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalHits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GroupConfiguration"
            }
          }
        }
      },
      "GroupConfiguration" : {
        "required" : [ "id", "name" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "productVersion" : {
            "$ref" : "#/components/schemas/ProductVersionRef"
          },
          "buildConfigs" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BuildConfigurationRef"
            }
          }
        }
      },
      "PageGroupConfiguration" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalHits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GroupConfiguration"
            }
          }
        }
      },
      "BuildConfigRevisionPage" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalHits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BuildConfigurationRevision"
            }
          }
        }
      },
      "PageBuildConfigurationRevision" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalHits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BuildConfigurationRevision"
            }
          }
        }
      },
      "BuildConfigCreationResponse" : {
        "type" : "object",
        "properties" : {
          "taskId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "buildConfiguration" : {
            "$ref" : "#/components/schemas/BuildConfiguration"
          }
        }
      },
      "BuildConfigWithSCMRequest" : {
        "required" : [ "scmUrl" ],
        "type" : "object",
        "properties" : {
          "scmUrl" : {
            "type" : "string"
          },
          "preBuildSyncEnabled" : {
            "type" : "boolean"
          },
          "buildConfiguration" : {
            "$ref" : "#/components/schemas/BuildConfiguration"
          }
        }
      },
      "Parameter" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "ArtifactImportError" : {
        "type" : "object",
        "properties" : {
          "artifactId" : {
            "type" : "string"
          },
          "errorMessage" : {
            "type" : "string"
          }
        }
      },
      "BuildPushResult" : {
        "required" : [ "buildId", "id", "log", "status" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "buildId" : {
            "type" : "string"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "ACCEPTED", "SUCCESS", "REJECTED", "FAILED", "SYSTEM_ERROR", "CANCELED" ]
          },
          "log" : {
            "type" : "string"
          },
          "artifactImportErrors" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ArtifactImportError"
            }
          },
          "brewBuildId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "brewBuildUrl" : {
            "type" : "string"
          }
        }
      },
      "BuildPushResultPage" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalHits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BuildPushResult"
            }
          }
        }
      },
      "BuildPushRequest" : {
        "type" : "object",
        "properties" : {
          "tagPrefix" : {
            "type" : "string"
          },
          "reimport" : {
            "type" : "boolean"
          }
        }
      },
      "SSHCredentials" : {
        "type" : "object",
        "properties" : {
          "command" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          }
        }
      },
      "BuildsGraph" : {
        "type" : "object",
        "properties" : {
          "vertices" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/VertexBuild"
            }
          },
          "edges" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EdgeBuild"
            }
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "EdgeBuild" : {
        "type" : "object",
        "properties" : {
          "source" : {
            "type" : "string"
          },
          "target" : {
            "type" : "string"
          },
          "cost" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "VertexBuild" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "dataType" : {
            "type" : "string"
          },
          "data" : {
            "$ref" : "#/components/schemas/Build"
          }
        }
      },
      "GraphBuild" : {
        "type" : "object",
        "properties" : {
          "vertices" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/VertexBuild"
            }
          },
          "edges" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/EdgeBuild"
            }
          },
          "metadata" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "BuildEnvironmentPage" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalHits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Environment"
            }
          }
        }
      },
      "PageEnvironment" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalHits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Environment"
            }
          }
        }
      },
      "GroupBuild" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "startTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "endTime" : {
            "type" : "integer",
            "format" : "int64"
          },
          "status" : {
            "type" : "string",
            "enum" : [ "SUCCESS", "FAILED", "NO_REBUILD_REQUIRED", "WAITING_FOR_DEPENDENCIES", "BUILDING", "REJECTED", "REJECTED_FAILED_DEPENDENCIES", "CANCELLED", "SYSTEM_ERROR", "NEW" ]
          },
          "temporaryBuild" : {
            "type" : "boolean"
          },
          "groupConfig" : {
            "$ref" : "#/components/schemas/GroupConfigurationRef"
          },
          "user" : {
            "$ref" : "#/components/schemas/User"
          },
          "productVersion" : {
            "$ref" : "#/components/schemas/ProductVersionRef"
          }
        }
      },
      "GroupBuildPage" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalHits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GroupBuild"
            }
          }
        }
      },
      "PageGroupBuild" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalHits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/GroupBuild"
            }
          }
        }
      },
      "GroupBuildPushRequest" : {
        "type" : "object",
        "properties" : {
          "tagPrefix" : {
            "type" : "string"
          }
        }
      },
      "GroupBuildRequest" : {
        "type" : "object",
        "properties" : {
          "buildConfigurationRevisions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/BuildConfigurationRevisionRef"
            }
          }
        }
      },
      "Product" : {
        "required" : [ "abbreviation", "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "abbreviation" : {
            "pattern" : "[a-zA-Z0-9-]+",
            "type" : "string"
          },
          "productCode" : {
            "type" : "string"
          },
          "pgmSystemName" : {
            "type" : "string"
          },
          "productVersions" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ProductVersionRef"
            }
          }
        }
      },
      "ProductPage" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalHits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Product"
            }
          }
        }
      },
      "PageProduct" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalHits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Product"
            }
          }
        }
      },
      "ProductRef" : {
        "required" : [ "abbreviation", "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "abbreviation" : {
            "pattern" : "[a-zA-Z0-9-]+",
            "type" : "string"
          },
          "productCode" : {
            "type" : "string"
          },
          "pgmSystemName" : {
            "type" : "string"
          }
        }
      },
      "ProductReleaseRef" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          },
          "supportLevel" : {
            "type" : "string",
            "enum" : [ "UNRELEASED", "EARLYACCESS", "SUPPORTED", "EXTENDED_SUPPORT", "EOL" ]
          },
          "releaseDate" : {
            "type" : "integer",
            "format" : "int64"
          },
          "downloadUrl" : {
            "type" : "string"
          },
          "issueTrackerUrl" : {
            "type" : "string"
          }
        }
      },
      "ProductVersion" : {
        "required" : [ "id", "version" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "pattern" : "^[0-9]+\\.[0-9]+$",
            "type" : "string"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "product" : {
            "$ref" : "#/components/schemas/ProductRef"
          },
          "currentProductMilestone" : {
            "$ref" : "#/components/schemas/ProductMilestoneRef"
          },
          "productMilestones" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ProductMilestoneRef"
            }
          },
          "productReleases" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ProductReleaseRef"
            }
          },
          "groupConfigs" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/GroupConfigurationRef"
            }
          },
          "buildConfigs" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BuildConfigurationRef"
            }
          }
        }
      },
      "ProductVersionPage" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalHits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProductVersion"
            }
          }
        }
      },
      "PageProductVersion" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalHits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProductVersion"
            }
          }
        }
      },
      "ProductMilestone" : {
        "required" : [ "id", "version" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "pattern" : "^[0-9]+\\.[0-9]+\\.[0-9]+\\.[\\w\\.-]+$",
            "type" : "string"
          },
          "endDate" : {
            "type" : "integer",
            "format" : "int64"
          },
          "startingDate" : {
            "type" : "integer",
            "format" : "int64"
          },
          "plannedEndDate" : {
            "type" : "integer",
            "format" : "int64"
          },
          "downloadUrl" : {
            "type" : "string"
          },
          "issueTrackerUrl" : {
            "type" : "string"
          },
          "productVersion" : {
            "$ref" : "#/components/schemas/ProductVersionRef"
          },
          "productRelease" : {
            "$ref" : "#/components/schemas/ProductReleaseRef"
          }
        }
      },
      "ProductRelease" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "version" : {
            "type" : "string"
          },
          "supportLevel" : {
            "type" : "string",
            "enum" : [ "UNRELEASED", "EARLYACCESS", "SUPPORTED", "EXTENDED_SUPPORT", "EOL" ]
          },
          "releaseDate" : {
            "type" : "integer",
            "format" : "int64"
          },
          "downloadUrl" : {
            "type" : "string"
          },
          "issueTrackerUrl" : {
            "type" : "string"
          },
          "productVersion" : {
            "$ref" : "#/components/schemas/ProductVersionRef"
          },
          "productMilestone" : {
            "$ref" : "#/components/schemas/ProductMilestoneRef"
          }
        }
      },
      "ProductReleasePage" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalHits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProductRelease"
            }
          }
        }
      },
      "PageProductRelease" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalHits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProductRelease"
            }
          }
        }
      },
      "ProductMilestonePage" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalHits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProductMilestone"
            }
          }
        }
      },
      "PageProductMilestone" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalHits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProductMilestone"
            }
          }
        }
      },
      "Project" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "issueTrackerUrl" : {
            "type" : "string"
          },
          "projectUrl" : {
            "type" : "string"
          },
          "buildConfigs" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/BuildConfigurationRef"
            }
          }
        }
      },
      "ProjectPage" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalHits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Project"
            }
          }
        }
      },
      "PageProject" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalHits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Project"
            }
          }
        }
      },
      "SCMRepositoryPage" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalHits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SCMRepository"
            }
          }
        }
      },
      "PageSCMRepository" : {
        "type" : "object",
        "properties" : {
          "pageIndex" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalPages" : {
            "type" : "integer",
            "format" : "int32"
          },
          "totalHits" : {
            "type" : "integer",
            "format" : "int32"
          },
          "content" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/SCMRepository"
            }
          }
        }
      },
      "RepositoryCreationResponse" : {
        "type" : "object",
        "properties" : {
          "taskId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "repository" : {
            "$ref" : "#/components/schemas/SCMRepository"
          }
        }
      },
      "CreateAndSyncSCMRequest" : {
        "required" : [ "scmUrl" ],
        "type" : "object",
        "properties" : {
          "scmUrl" : {
            "type" : "string"
          },
          "preBuildSyncEnabled" : {
            "type" : "boolean"
          }
        }
      }
    }
  }
}